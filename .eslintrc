{
    "parser": "@typescript-eslint/parser",
    "extends": [
        "airbnb-base",
        "airbnb-typescript/base",
        "plugin:sonarjs/recommended-legacy",
        "plugin:prettier/recommended"
    ],
    "plugins": [
        "@typescript-eslint",
        "sonarjs",
        "import",
        "unused-imports",
        "jest"
    ],
    "env": {
        "es6": true,
        "browser": true,
        "jest": true
    },
    "rules": {
        "import/consistent-type-specifier-style": ["error", "prefer-top-level"],
        "import/prefer-default-export": "off",
        "import/no-cycle": "off",
        "no-multi-assign": "off",
        "import/imports-first": [
            "error",
            "absolute-first"
        ],
        // https://stackoverflow.com/a/59268871
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "ts": "never"
            }
        ],
        "quotes": [
            2,
            "single",
            {
                "avoidEscape": true
            }
        ],
        "semi": [
            "error",
            "never"
        ],
        "constructor-super": "error",
        "no-invalid-this": "error",
        "no-restricted-syntax": [
            "error",
            "ForInStatement"
        ],
        "use-isnan": "error",
        "unused-imports/no-unused-imports": "warn",
        "unused-imports/no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "varsIgnorePattern": "^_",
                "args": "after-used",
                "argsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "args": "after-used",
                "ignoreRestSiblings": true,
                "vars": "all",
                "varsIgnorePattern": "^_",
                "argsIgnorePattern": "^_"
            }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/no-unnecessary-condition": [
            "error",
            {
                "allowConstantLoopConditions": true
            }
        ]
    },
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [
                ".js",
                ".ts"
            ]
        },
        "import/resolver": {
            "typescript": {}
        }
    },
    "parserOptions": {
        // Allows for the parsing of modern ECMAScript features
        "ecmaVersion": "latest",
        // Allows for the use of imports
        "sourceType": "module",
        // https://blog.geographer.fr/eslint-parser-services, https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project
        "project": "./tsconfig.json"
    }
}
